---
- name: create version json file
  copy:
    content: "{{ item.value | to_nice_json }}"
    dest: "{{ app_base_path }}/{{ item.key }}/webroot/__version.json"
  with_dict: "{{ versions }}"

- name: pre-bundle creation commands
  shell: "{{ item.value.pre_bundle }}"
  args:
    chdir: "{{ app_base_path }}/{{ item.key }}"
  when: item.value.bundle is defined and item.value.pre_bundle is defined
  with_dict: "{{ apps }}"

- name: make sure yarn cache dir exists
  file:
    path: "{{ yarn_cache_dir }}"
    state: directory

- name: install JS/CSS packages (yarn)
  command: yarn
  args:
    chdir: "{{ app_base_path }}/{{ item.key }}"
  when: item.value.bundle is defined
  with_dict: "{{ apps }}"
  environment:
    YARN_CACHE_FOLDER: "{{ yarn_cache_dir }}"

- name: create JS/CSS bundle (yarn build)
  command: yarn build
  args:
    chdir: "{{ app_base_path }}/{{ item.key }}"
  when: item.value.bundle is defined
  with_dict: "{{ apps }}"

- name: create package archive
  archive:
    path:
    - "{{ app_base_path }}/{{ item.key }}/*"
    dest: "{{ app_package_path }}/{{ item.key }}-{{ pack_suffix }}.tar.gz"
    exclude_path:
    - "{{ app_base_path }}/{{ item.key }}/.git"
    - "{{ app_base_path }}/{{ item.key }}/logs"
    - "{{ app_base_path }}/{{ item.key }}/node_modules"
    - "{{ app_base_path }}/{{ item.key }}/resources/assets"
    - "{{ app_base_path }}/{{ item.key }}/tests"
    - "{{ app_base_path }}/{{ item.key }}/tmp"
    owner: "{{ app_deploy_user }}"
    format: gz
  with_dict: "{{ apps }}"

- name: fetch package
  fetch:
    src: "{{ app_package_path }}/{{ item.key }}-{{ pack_suffix }}.tar.gz"
    dest: "tmp/packages/{{ item.key }}-{{ pack_suffix }}.tar.gz"
    flat: yes
  with_dict: "{{ apps }}"
